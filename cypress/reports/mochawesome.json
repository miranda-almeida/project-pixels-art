{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 34,
    "pending": 0,
    "failures": 7,
    "start": "2022-07-05T22:20:41.162Z",
    "end": "2022-07-05T22:24:40.790Z",
    "duration": 239628,
    "testsRegistered": 41,
    "passPercent": 82.92682926829268,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "36d87ae2-ca16-4ec7-a464-368531cd2c19",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8bff8968-5bce-4084-a139-8c64a936666a",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 4157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "38e17926-da16-4774-8f4a-185c9ade834b",
              "parentUUID": "8bff8968-5bce-4084-a139-8c64a936666a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38e17926-da16-4774-8f4a-185c9ade834b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4157,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5c5a7986-5b95-4bf8-a995-14f72c815b2a",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 4871,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "175822b4-189b-4859-b592-c2538f286ad3",
              "parentUUID": "5c5a7986-5b95-4bf8-a995-14f72c815b2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 8390,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "ec803eb4-59b2-4826-9528-b42c8981d288",
              "parentUUID": "5c5a7986-5b95-4bf8-a995-14f72c815b2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 5524,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "697bc833-9962-43e7-8473-28d1b999cbed",
              "parentUUID": "5c5a7986-5b95-4bf8-a995-14f72c815b2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 3690,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "6f223b99-5b8e-4189-bc7e-e2a95bd39373",
              "parentUUID": "5c5a7986-5b95-4bf8-a995-14f72c815b2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 2621,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "008f83a2-0406-4e3b-9223-77cf6e1d6420",
              "parentUUID": "5c5a7986-5b95-4bf8-a995-14f72c815b2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 1399,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "b07c776e-6ed7-4fb7-85ae-f05789a15867",
              "parentUUID": "5c5a7986-5b95-4bf8-a995-14f72c815b2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 938,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "6b490e2f-2af4-4576-b93b-052e6168f0a2",
              "parentUUID": "5c5a7986-5b95-4bf8-a995-14f72c815b2a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "175822b4-189b-4859-b592-c2538f286ad3",
            "ec803eb4-59b2-4826-9528-b42c8981d288",
            "697bc833-9962-43e7-8473-28d1b999cbed",
            "6f223b99-5b8e-4189-bc7e-e2a95bd39373",
            "008f83a2-0406-4e3b-9223-77cf6e1d6420",
            "b07c776e-6ed7-4fb7-85ae-f05789a15867",
            "6b490e2f-2af4-4576-b93b-052e6168f0a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27433,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2f6272f4-9a94-4258-aff4-482f61550431",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 1819,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "b944df8b-3e88-4ce4-b020-e828acf0f8ac",
              "parentUUID": "2f6272f4-9a94-4258-aff4-482f61550431",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 7380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "fa8b3990-96a7-4bd0-b71f-0e60afbe59bb",
              "parentUUID": "2f6272f4-9a94-4258-aff4-482f61550431",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b944df8b-3e88-4ce4-b020-e828acf0f8ac",
            "fa8b3990-96a7-4bd0-b71f-0e60afbe59bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9199,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7757be3d-491f-4322-b2b6-a31b06b750c7",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 1670,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "e1b876bc-b52e-4bf0-b61a-f58b55f675b0",
              "parentUUID": "7757be3d-491f-4322-b2b6-a31b06b750c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 1644,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "93417e10-bd6c-4e3e-afa5-7f88bd2bc92e",
              "parentUUID": "7757be3d-491f-4322-b2b6-a31b06b750c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 1893,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "2e0f5742-a792-4c12-be8c-0752ba8c25c8",
              "parentUUID": "7757be3d-491f-4322-b2b6-a31b06b750c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 981,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "538c4017-533e-4e8e-ba32-13ca48516b4e",
              "parentUUID": "7757be3d-491f-4322-b2b6-a31b06b750c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1b876bc-b52e-4bf0-b61a-f58b55f675b0",
            "93417e10-bd6c-4e3e-afa5-7f88bd2bc92e",
            "2e0f5742-a792-4c12-be8c-0752ba8c25c8",
            "538c4017-533e-4e8e-ba32-13ca48516b4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6188,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "10eae8c2-f4fe-4c1e-89f3-1ea8da3ca42f",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 3490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "71002742-47bb-452c-9fef-29dac430f254",
              "parentUUID": "10eae8c2-f4fe-4c1e-89f3-1ea8da3ca42f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 20670,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "eb89f680-19d0-4fd0-af27-2be31aa85668",
              "parentUUID": "10eae8c2-f4fe-4c1e-89f3-1ea8da3ca42f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71002742-47bb-452c-9fef-29dac430f254",
            "eb89f680-19d0-4fd0-af27-2be31aa85668"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24160,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eebcd23d-ede9-4850-8d4d-a2f54f796ef0",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 2219,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "2fef74af-65b9-42a6-8bc3-abb9f198aac2",
              "parentUUID": "eebcd23d-ede9-4850-8d4d-a2f54f796ef0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 1303,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "215abe50-01ed-4cc5-854c-ce731e3b6db3",
              "parentUUID": "eebcd23d-ede9-4850-8d4d-a2f54f796ef0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2fef74af-65b9-42a6-8bc3-abb9f198aac2",
            "215abe50-01ed-4cc5-854c-ce731e3b6db3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3522,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7e42f2bc-dcd8-4325-a940-e97be3a2b9fb",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 1763,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "0e273ded-467f-4cd0-9b5c-a0c4c7642b68",
              "parentUUID": "7e42f2bc-dcd8-4325-a940-e97be3a2b9fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 19906,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "8f02267c-94f9-462d-a535-2d35c9d09c6d",
              "parentUUID": "7e42f2bc-dcd8-4325-a940-e97be3a2b9fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e273ded-467f-4cd0-9b5c-a0c4c7642b68",
            "8f02267c-94f9-462d-a535-2d35c9d09c6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21669,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "248c03ce-0b78-4f0d-bac4-3a09d9408d6c",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 23450,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "bb96e25a-ce28-498f-9e7c-28f929ed6343",
              "parentUUID": "248c03ce-0b78-4f0d-bac4-3a09d9408d6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 15338,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "9e2df51c-de55-418a-bcef-bfcaad3ef57b",
              "parentUUID": "248c03ce-0b78-4f0d-bac4-3a09d9408d6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 9693,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "5d3119bc-8d71-4207-80c0-cd1eeea601d7",
              "parentUUID": "248c03ce-0b78-4f0d-bac4-3a09d9408d6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb96e25a-ce28-498f-9e7c-28f929ed6343",
            "9e2df51c-de55-418a-bcef-bfcaad3ef57b",
            "5d3119bc-8d71-4207-80c0-cd1eeea601d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 48481,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d431db8a-df23-48cf-a332-5f8707943681",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 2352,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "c7b1f3f6-01b8-413c-9551-5ef81820b88c",
              "parentUUID": "d431db8a-df23-48cf-a332-5f8707943681",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 1109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "53dcd5ca-ee16-4e3e-93ae-b85d1716aae0",
              "parentUUID": "d431db8a-df23-48cf-a332-5f8707943681",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 1183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "6c571e0d-5e84-4b58-a963-ab3a0b0d86a9",
              "parentUUID": "d431db8a-df23-48cf-a332-5f8707943681",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 6127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "d0a30b3b-fd40-4dd0-a8f0-9b08c27099d9",
              "parentUUID": "d431db8a-df23-48cf-a332-5f8707943681",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7b1f3f6-01b8-413c-9551-5ef81820b88c",
            "53dcd5ca-ee16-4e3e-93ae-b85d1716aae0",
            "6c571e0d-5e84-4b58-a963-ab3a0b0d86a9",
            "d0a30b3b-fd40-4dd0-a8f0-9b08c27099d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10771,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2881b8a0-6d64-40dd-acff-166d83fc4cb8",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 1720,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "158924e7-b790-4955-a157-c36be6fbcea3",
              "parentUUID": "2881b8a0-6d64-40dd-acff-166d83fc4cb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 797,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "f90b542a-8e82-4147-b618-e9c470eab367",
              "parentUUID": "2881b8a0-6d64-40dd-acff-166d83fc4cb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 1060,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {},
              "uuid": "94ef7e79-1839-4271-977a-dbb75ec9b8dd",
              "parentUUID": "2881b8a0-6d64-40dd-acff-166d83fc4cb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 631,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "81b6d202-4105-4aad-87e3-375a827cdc90",
              "parentUUID": "2881b8a0-6d64-40dd-acff-166d83fc4cb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 910,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "b6b899fd-087b-4e93-99c8-b95b063dfe9d",
              "parentUUID": "2881b8a0-6d64-40dd-acff-166d83fc4cb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 865,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "80c4b6fd-c8d1-4a5e-8ee7-14c1af368267",
              "parentUUID": "2881b8a0-6d64-40dd-acff-166d83fc4cb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 992,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {},
              "uuid": "d6d8e3c6-70b2-4863-847f-6e0ebcb7425b",
              "parentUUID": "2881b8a0-6d64-40dd-acff-166d83fc4cb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 7921,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '50', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '50', expected '100'.\n    at cypressErr (http://localhost:59056/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59056/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59056/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59056/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59056/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59056/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59056/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59056/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59056/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59056/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59056/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59056/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59056/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a8f876d7-08a3-470f-9d8f-d6cd2a645885",
              "parentUUID": "2881b8a0-6d64-40dd-acff-166d83fc4cb8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 10613,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Too many elements found. Found '50', expected '36'.",
                "estack": "CypressError: Timed out retrying: Too many elements found. Found '50', expected '36'.\n    at cypressErr (http://localhost:59056/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59056/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59056/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59056/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59056/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59056/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59056/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59056/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59056/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59056/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59056/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59056/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59056/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "df244f77-074a-4ffb-8471-262a135cf3f7",
              "parentUUID": "2881b8a0-6d64-40dd-acff-166d83fc4cb8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "158924e7-b790-4955-a157-c36be6fbcea3",
            "f90b542a-8e82-4147-b618-e9c470eab367",
            "94ef7e79-1839-4271-977a-dbb75ec9b8dd",
            "81b6d202-4105-4aad-87e3-375a827cdc90",
            "b6b899fd-087b-4e93-99c8-b95b063dfe9d",
            "80c4b6fd-c8d1-4a5e-8ee7-14c1af368267",
            "d6d8e3c6-70b2-4863-847f-6e0ebcb7425b"
          ],
          "failures": [
            "a8f876d7-08a3-470f-9d8f-d6cd2a645885",
            "df244f77-074a-4ffb-8471-262a135cf3f7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25509,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fb6e3c76-d479-4a82-87c0-18e834bd4bd8",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 10211,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '50', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '50', expected '2500'.\n    at cypressErr (http://localhost:59056/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59056/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59056/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59056/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59056/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59056/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59056/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59056/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59056/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59056/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59056/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59056/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59056/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "333c454e-58c5-4e58-9f42-e924755dbab1",
              "parentUUID": "fb6e3c76-d479-4a82-87c0-18e834bd4bd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 10368,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Too many elements found. Found '50', expected '25'.",
                "estack": "CypressError: Timed out retrying: Too many elements found. Found '50', expected '25'.\n    at cypressErr (http://localhost:59056/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59056/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59056/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59056/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59056/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59056/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59056/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59056/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59056/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59056/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59056/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59056/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59056/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d4eeb1fd-4fe7-4e61-a0b6-a6860cb8a499",
              "parentUUID": "fb6e3c76-d479-4a82-87c0-18e834bd4bd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 10618,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '50', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '50', expected '2500'.\n    at cypressErr (http://localhost:59056/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:59056/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:59056/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:59056/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:59056/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:59056/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59056/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59056/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:59056/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:59056/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59056/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59056/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59056/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "92f7a8b0-33f3-428b-a799-b73c1bc0e0d1",
              "parentUUID": "fb6e3c76-d479-4a82-87c0-18e834bd4bd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "333c454e-58c5-4e58-9f42-e924755dbab1",
            "d4eeb1fd-4fe7-4e61-a0b6-a6860cb8a499",
            "92f7a8b0-33f3-428b-a799-b73c1bc0e0d1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 31197,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "13f04ce2-eabf-4ff9-970e-162fd5fd3b10",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 4382,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:59056/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:59056/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:59056/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:59056/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:59056/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:59056/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:59056/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:59056/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59056/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59056/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:59056/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59056/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59056/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59056/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "5ef9a3bb-7ae5-4915-baa9-b1c36b105bee",
              "parentUUID": "13f04ce2-eabf-4ff9-970e-162fd5fd3b10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 5614,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:59056/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:59056/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:59056/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:59056/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:59056/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:59056/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:59056/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:59056/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:59056/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:59056/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:59056/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:59056/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:59056/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:59056/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "1acaf4fc-73c8-4af6-8c14-bc73742d51a1",
              "parentUUID": "13f04ce2-eabf-4ff9-970e-162fd5fd3b10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5ef9a3bb-7ae5-4915-baa9-b1c36b105bee",
            "1acaf4fc-73c8-4af6-8c14-bc73742d51a1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9996,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}